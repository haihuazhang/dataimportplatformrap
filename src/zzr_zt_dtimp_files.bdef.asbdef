managed implementation in class ZBP_R_ZT_DTIMP_FILES unique;
strict ( 2 );
with draft;

define behavior for ZZR_ZT_DTIMP_FILES alias Files
persistent table zzt_dtimp_files
draft table zzt_dtimp_filesd
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master ( global )
with additional save

{
  field ( readonly )
  UUID,
  StatusText,
  CreatedAt,
  CreatedBy,
  LastChangedAt,
  LastChangedBy,
  LocalLastChangedAt;

  field ( features : instance )
  JobCount,
  JobName,
  LogHandle;

  //  field ( mandatory :  )

  field ( numbering : managed )
  UUID;

  create;
  update ( features : instance );
  delete ( features : instance );

  association _Messages { create; with draft; }
  association _ImportData { create; with draft; }

  draft action ( features : instance ) Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

  mapping for zzt_dtimp_files
    {
      UUID               = uuid;
      Name               = name;
      UuidConf           = uuid_conf;
      MimeType           = mime_type;
      Attachment         = attachment;
      FileName           = file_name;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
      JobCount           = jobcount;
      JobName            = jobname;
      LogHandle          = loghandle;
      Status             = status;
      //    status = status;
    }
}




define behavior for ZR_ZT_DTIMP_MSG alias Message
persistent table zzt_dtimp_msg
draft table zzt_dtimp_msg_d
etag master LocalLastChangedAt
//lock master total etag LastChangedAt
//authorization master( global )
lock dependent by _Record
authorization dependent by _Record

{
  field ( readonly )
  Uuid,
  UUIDRecord,
  CreatedBy,
  CreatedAt,
  LastChangedBy,
  LastChangedAt,
  LocalLastChangedAt;

  field ( numbering : managed )
  Uuid;


  //  create;
  update;
  delete;

  association _Record { with draft; }

  //  draft action Activate optimized;
  //  draft action Discard;
  //  draft action Edit;
  //  draft action Resume;
  //  draft determine action Prepare;

  mapping for zzt_dtimp_msg
    {
      Uuid               = uuid;
      UuidRecord         = uuid_record;
      Line               = line;
      Type               = type;
      Id                 = id;
      MsgNumber          = msg_number;
      Message            = message;
      MessageV1          = message_v1;
      MessageV2          = message_v2;
      MessageV3          = message_v3;
      MessageV4          = message_v4;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }
}


define behavior for ZZR_ZT_DTIMP_DATA alias ImportData
persistent table zzt_dtimp_data
draft table zzt_dtimp_data_d
etag master LocalLastChangedAt
//lock master total etag LastChangedAt
//authorization master( global )
lock dependent by _Record
authorization dependent by _Record

{
  field ( readonly )
  Uuid,
  UUIDRecord,
  CreatedBy,
  CreatedAt,
  LastChangedBy,
  LastChangedAt,
  LocalLastChangedAt;

  field ( numbering : managed )
  Uuid;


  //  create;
  update;
  delete;

  association _Record { with draft; }
  //  draft action Activate optimized;
  //  draft action Discard;
  //  draft action Edit;
  //  draft action Resume;
  //  draft determine action Prepare;

  mapping for zzt_dtimp_data
    {
      Uuid               = uuid;
      UuidRecord         = uuid_record;
      DataJson           = data_json;
      Line               = line;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }
}